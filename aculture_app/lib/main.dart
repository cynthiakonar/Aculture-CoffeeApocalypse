import 'package:flutter/material.dart';
import 'package:adobe_xd/pinned.dart';
import 'dart:ui' as ui;
import 'package:flutter_svg/flutter_svg.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xffffffff),
      body: Stack(
        children: <Widget>[
          Pinned.fromPins(
            Pin(size: 181.0, start: 26.0),
            Pin(size: 181.0, start: -69.0),
            child: Container(
              decoration: BoxDecoration(
                borderRadius:
                    BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                color: const Color(0x8060bcdf),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 254.0, end: -106.0),
            Pin(size: 253.0, end: 78.0),
            child: Container(
              decoration: BoxDecoration(
                borderRadius:
                    BorderRadius.all(Radius.elliptical(9999.0, 9999.0)),
                color: const Color(0x8060bcdf),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(start: 0.0, end: 0.0),
            Pin(start: 0.0, end: 0.0),
            child: ClipRect(
              child: BackdropFilter(
                filter: ui.ImageFilter.blur(sigmaX: 30.0, sigmaY: 30.0),
                child: Container(
                  decoration: BoxDecoration(
                    color: Colors.transparent,
                  ),
                ),
              ),
            ),
          ),
          Pinned.fromPins(
            Pin(size: 34.5, middle: 0.4985),
            Pin(size: 38.6, middle: 0.4065),
            child: Stack(
              children: <Widget>[
                Pinned.fromPins(
                  Pin(size: 12.9, end: 0.0),
                  Pin(size: 29.7, start: 0.0),
                  child: SvgPicture.string(
                    _svg_r56y9,
                    allowDrawingOutsideViewBox: true,
                    fit: BoxFit.fill,
                  ),
                ),
                Pinned.fromPins(
                  Pin(size: 22.4, start: 0.0),
                  Pin(size: 16.6, end: 0.0),
                  child: SvgPicture.string(
                    _svg_mlpt34,
                    allowDrawingOutsideViewBox: true,
                    fit: BoxFit.fill,
                  ),
                ),
                Pinned.fromPins(
                  Pin(size: 9.8, end: 0.8),
                  Pin(size: 8.2, end: 0.1),
                  child: SvgPicture.string(
                    _svg_ykt0bd,
                    allowDrawingOutsideViewBox: true,
                    fit: BoxFit.fill,
                  ),
                ),
              ],
            ),
          ),
          Pinned.fromPins(
            Pin(size: 262.0, end: 56.0),
            Pin(size: 73.0, middle: 0.7821),
            child: Text(
              'aculture',
              style: TextStyle(
                fontFamily: 'Lucida Calligraphy',
                fontSize: 58,
                color: Colors.transparent,
                fontStyle: FontStyle.italic,
                height: 1.1896551724137931,
              ),
              textHeightBehavior:
                  TextHeightBehavior(applyHeightToFirstAscent: false),
              textAlign: TextAlign.center,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 36.0, middle: 0.5007),
            Pin(size: 35.5, end: 97.3),
            child:
                // Adobe XD layer: 'Icon simple-circleci' (shape)
                SvgPicture.string(
              _svg_lcx3wv,
              allowDrawingOutsideViewBox: true,
              fit: BoxFit.fill,
            ),
          ),
          Pinned.fromPins(
            Pin(size: 108.6, middle: 0.4992),
            Pin(size: 13.8, end: 20.3),
            child: Stack(
              children: <Widget>[
                Pinned.fromPins(
                  Pin(size: 87.0, end: 0.0),
                  Pin(size: 11.0, start: 0.0),
                  child: Text(
                    'all rights reserved',
                    style: TextStyle(
                      fontFamily: 'Montserrat',
                      fontSize: 9,
                      color: const Color(0xff707070),
                    ),
                    textAlign: TextAlign.left,
                  ),
                ),
                Pinned.fromPins(
                  Pin(size: 13.8, start: 0.0),
                  Pin(start: 0.0, end: 0.0),
                  child:
                      // Adobe XD layer: 'Icon metro-copyright' (shape)
                      SvgPicture.string(
                    _svg_dff4tf,
                    allowDrawingOutsideViewBox: true,
                    fit: BoxFit.fill,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
      // This call to setState tells the Flutter framework that something has
      // changed in this State, which causes it to rerun the build method below
      // so that the display can reflect the updated values. If we changed
      // _counter without calling setState(), then the build method would not be
      // called again, and so nothing would appear to happen.
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    // This method is rerun every time setState is called, for instance as done
    // by the _incrementCounter method above.
    //
    // The Flutter framework has been optimized to make rerunning build methods
    // fast, so that you can just rebuild anything that needs updating rather
    // than having to individually change instances of widgets.
    return Scaffold(
      appBar: AppBar(
        // Here we take the value from the MyHomePage object that was created by
        // the App.build method, and use it to set our appbar title.
        title: Text(widget.title),
      ),
      body: Center(
        // Center is a layout widget. It takes a single child and positions it
        // in the middle of the parent.
        child: Column(
          // Column is also a layout widget. It takes a list of children and
          // arranges them vertically. By default, it sizes itself to fit its
          // children horizontally, and tries to be as tall as its parent.
          //
          // Invoke "debug painting" (press "p" in the console, choose the
          // "Toggle Debug Paint" action from the Flutter Inspector in Android
          // Studio, or the "Toggle Debug Paint" command in Visual Studio Code)
          // to see the wireframe for each widget.
          //
          // Column has various properties to control how it sizes itself and
          // how it positions its children. Here we use mainAxisAlignment to
          // center the children vertically; the main axis here is the vertical
          // axis because Columns are vertical (the cross axis would be
          // horizontal).
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headline4,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}

const String _svg_r56y9 =
    '<svg viewBox="89.7 271.6 12.9 29.7" ><path transform="translate(-726.37, -38.46)" d="M 816.078369140625 330.384765625 C 816.2099609375 323.9555358886719 818.0201416015625 318.1241760253906 822.30322265625 313.1924438476562 C 823.2764282226562 312.0718688964844 824.4190673828125 311.1434936523438 825.7305297851562 310.4323425292969 C 826.8220825195312 309.8404235839844 826.8526000976562 309.84716796875 827.322021484375 310.9638671875 C 828.6819458007812 314.1989135742188 829.1214599609375 317.5895385742188 828.827392578125 321.0535278320312 C 828.4600830078125 325.3794250488281 827.3114013671875 329.4954223632812 825.0471801757812 333.2424011230469 C 823.55859375 335.7059631347656 821.7130126953125 337.8398132324219 819.1913452148438 339.3175964355469 C 818.1156616210938 339.947998046875 818.1351318359375 339.9493408203125 817.6494140625 338.8352966308594 C 816.474365234375 336.1409301757812 815.970458984375 333.32666015625 816.078369140625 330.384765625 Z" fill="#4eb179" fill-opacity="0.0" stroke="none" stroke-width="1" stroke-opacity="0.0" stroke-miterlimit="10" stroke-linecap="butt" /></svg>';
const String _svg_mlpt34 =
    '<svg viewBox="68.0 293.6 22.4 16.6" ><path transform="translate(-423.94, -344.85)" d="M 503.1035766601562 638.405029296875 C 507.7242431640625 638.5416259765625 510.9536437988281 640.91162109375 513.3409423828125 644.6653442382812 C 513.5126953125 644.9354248046875 513.6679077148438 645.216064453125 513.8316040039062 645.4913330078125 C 514.4146118164062 646.4715576171875 514.5004272460938 647.3366088867188 513.8607788085938 648.4481811523438 C 512.8153686523438 650.2648315429688 511.4244079589844 651.7357177734375 509.762939453125 652.8762817382812 C 507.2200622558594 654.6217041015625 504.4119873046875 655.482666015625 501.2385864257812 654.7625122070312 C 496.7062683105469 653.7339477539062 493.9556579589844 650.74853515625 492.0579833984375 646.7446899414062 C 491.6779174804688 645.942626953125 492.27294921875 645.3734130859375 492.6165771484375 644.8326416015625 C 494.6484375 641.6348266601562 497.4049987792969 639.3771362304688 501.1945495605469 638.5800170898438 C 501.8171081542969 638.4490356445312 502.4694519042969 638.45947265625 503.1035766601562 638.405029296875 Z M 506.7317504882812 642.2904663085938 C 503.9119567871094 642.345458984375 502.0601806640625 643.914306640625 500.6664733886719 646.1965942382812 C 500.4547729492188 646.543212890625 500.5804138183594 646.8603515625 500.7379455566406 647.1964721679688 C 501.3043823242188 648.4048461914062 502.1488647460938 649.3355102539062 503.2071838378906 650.1683959960938 C 504.8014831542969 651.423095703125 506.4871215820312 651.6777954101562 508.3921813964844 651.1856079101562 C 510.418212890625 650.662109375 511.7530517578125 649.33251953125 512.777587890625 647.6021118164062 C 512.9534912109375 647.3049926757812 513.0105590820312 646.9851684570312 512.8709106445312 646.6791381835938 C 511.7976684570312 644.3253173828125 509.3526611328125 642.171630859375 506.7317504882812 642.2904663085938 Z" fill="#4eb179" fill-opacity="0.0" stroke="none" stroke-width="1" stroke-opacity="0.0" stroke-miterlimit="10" stroke-linecap="butt" /></svg>';
const String _svg_ykt0bd =
    '<svg viewBox="92.0 301.9 9.8 8.2" ><path transform="translate(-758.87, -461.73)" d="M 860.6119995117188 769.4541015625 C 860.7713012695312 770.429931640625 860.5778198242188 771.0991821289062 859.494873046875 771.4423828125 C 856.2421264648438 772.4733276367188 853.3374633789062 771.5199584960938 851.6232299804688 768.5149536132812 C 851.0331420898438 767.4805297851562 850.8445434570312 766.2337646484375 850.9122314453125 764.99658203125 C 850.9264526367188 764.737060546875 851.0322265625 764.6315307617188 851.2661743164062 764.5125732421875 C 853.310302734375 763.4739990234375 855.4168701171875 763.3533325195312 857.4437255859375 764.3831787109375 C 859.462158203125 765.40869140625 860.4114990234375 767.2392578125 860.6119995117188 769.4541015625 Z" fill="#4eb179" fill-opacity="0.0" stroke="none" stroke-width="1" stroke-opacity="0.0" stroke-miterlimit="10" stroke-linecap="butt" /></svg>';
const String _svg_dff4tf =
    '<svg viewBox="28.5 786.0 13.8 13.8" ><path transform="translate(23.75, 781.58)" d="M 15.13300704956055 12.9317455291748 L 15.13300704956055 13.91399574279785 C 15.13300704956055 14.2143726348877 15.02337074279785 14.48171043395996 14.80409336090088 14.71601104736328 C 14.58481502532959 14.95031070709229 14.30245876312256 15.13203907012939 13.95702362060547 15.26119613647461 C 13.61158657073975 15.39035224914551 13.25713539123535 15.48797225952148 12.89366722106934 15.5540599822998 C 12.53020095825195 15.62014770507812 12.1772518157959 15.65319061279297 11.83482265472412 15.65319061279297 C 10.60325908660889 15.65319061279297 9.574456214904785 15.23565769195557 8.7484130859375 14.40059566497803 C 7.922370910644531 13.56553268432617 7.509354591369629 12.52621650695801 7.509365081787109 11.2826452255249 C 7.509365081787109 10.06309986114502 7.917876243591309 9.04481029510498 8.734898567199707 8.227776527404785 C 9.551920890808105 7.410744190216064 10.57020950317383 7.002227783203125 11.78976726531982 7.002227783203125 C 11.99404239654541 7.002227783203125 12.22082996368408 7.015742778778076 12.47013282775879 7.04277229309082 C 12.71943473815918 7.069801807403564 12.99878978729248 7.12387228012085 13.30819702148438 7.204982757568359 C 13.61760425567627 7.286092281341553 13.8954553604126 7.388224124908447 14.14175224304199 7.511377811431885 C 14.38804721832275 7.634530544281006 14.59531784057617 7.804248332977295 14.76356220245361 8.020526885986328 C 14.93180561065674 8.236806869506836 15.01591300964355 8.480116844177246 15.01588344573975 8.750456809997559 L 15.01588344573975 9.732706069946289 C 15.01588344573975 9.828830718994141 14.96781539916992 9.87689208984375 14.87168216705322 9.87689208984375 L 13.80832672119141 9.87689208984375 C 13.71220302581787 9.87689208984375 13.66414070129395 9.828830718994141 13.66414070129395 9.732706069946289 L 13.66414070129395 9.101907730102539 C 13.66414070129395 8.843585014343262 13.46738815307617 8.640829086303711 13.07388496398926 8.493642807006836 C 12.68038082122803 8.346455574035645 12.26736450195312 8.272862434387207 11.83483600616455 8.272862434387207 C 10.99376964569092 8.272862434387207 10.30739593505859 8.547712326049805 9.775717735290527 9.097412109375 C 9.244036674499512 9.647110939025879 8.978207588195801 10.36051559448242 8.978227615356445 11.23762130737305 C 8.978227615356445 12.144775390625 9.253072738647461 12.8942232131958 9.802762031555176 13.48596477508545 C 10.35245132446289 14.07770824432373 11.05384731292725 14.37358379364014 11.90695190429688 14.37359619140625 C 12.31545925140381 14.37359619140625 12.72997760772705 14.30150508880615 13.15051174163818 14.15732479095459 C 13.57104396820068 14.01314735412598 13.78131008148193 13.81489562988281 13.78131008148193 13.562575340271 L 13.78131008148193 12.93177509307861 C 13.78131008148193 12.88972282409668 13.79482555389404 12.85518169403076 13.82185649871826 12.82815170288086 C 13.84888648986816 12.80112266540527 13.88042640686035 12.78760719299316 13.91647624969482 12.78760623931885 L 14.98883819580078 12.78760623931885 C 15.02489757537842 12.78760623931885 15.05794048309326 12.80112171173096 15.08796691894531 12.82815170288086 C 15.117995262146 12.85518169403076 15.13301277160645 12.88972282409668 15.13302326202393 12.93177509307861 Z M 11.69063758850098 5.560407638549805 C 10.90964508056641 5.560407638549805 10.16319751739502 5.713602542877197 9.451298713684082 6.019992828369141 C 8.739398956298828 6.326383113861084 8.126628875732422 6.73640251159668 7.612990379333496 7.250052928924561 C 7.099351406097412 7.763702869415283 6.689331531524658 8.376477241516113 6.382930755615234 9.088376045227051 C 6.076530456542969 9.800275802612305 5.923329830169678 10.54672336578369 5.923329830169678 11.32771587371826 C 5.923329830169678 12.10870838165283 6.07652473449707 12.85515594482422 6.382915019989014 13.56705665588379 C 6.689305305480957 14.27895545959473 7.099324703216553 14.89173126220703 7.612974166870117 15.40538024902344 C 8.126625061035156 15.91903114318848 8.739398956298828 16.32905197143555 9.451299667358398 16.63544082641602 C 10.16319751739502 16.94182968139648 10.90964508056641 17.09502601623535 11.69063758850098 17.09502601623535 C 12.47163105010986 17.09502601623535 13.21807670593262 16.94182968139648 13.9299783706665 16.63544082641602 C 14.64187908172607 16.32905197143555 15.25465297698975 15.91903114318848 15.76830387115479 15.40538024902344 C 16.28194999694824 14.89173126220703 16.69197082519531 14.27895545959473 16.99835968017578 13.56705665588379 C 17.30475234985352 12.85515594482422 17.45794677734375 12.10870838165283 17.45794677734375 11.32771587371826 C 17.45794677734375 10.54672336578369 17.30475234985352 9.800275802612305 16.99835968017578 9.088376045227051 C 16.69197082519531 8.376476287841797 16.28194999694824 7.763701915740967 15.76830387115479 7.250052452087402 C 15.25465297698975 6.73640251159668 14.64188385009766 6.326383113861084 13.92999362945557 6.019992828369141 C 13.21810436248779 5.713602542877197 12.47165775299072 5.560407638549805 11.69065380096436 5.560407638549805 Z M 18.61141204833984 11.32771587371826 C 18.61141204833984 12.58331203460693 18.3020191192627 13.74128246307373 17.68323516845703 14.80162620544434 C 17.06445121765137 15.86196899414062 16.22488975524902 16.7015323638916 15.16454792022705 17.32031631469727 C 14.10420417785645 17.9390983581543 12.94623470306396 18.24848937988281 11.69063758850098 18.24848937988281 C 10.4350414276123 18.24848937988281 9.277072906494141 17.9390983581543 8.216729164123535 17.32031631469727 C 7.156385898590088 16.7015323638916 6.31682300567627 15.86196899414062 5.698039531707764 14.80162620544434 C 5.079256057739258 13.74128246307373 4.769864082336426 12.58331203460693 4.769864559173584 11.32771587371826 C 4.769864559173584 10.07211971282959 5.079256534576416 8.914149284362793 5.698039531707764 7.853806972503662 C 6.316822528839111 6.793463706970215 7.15638542175293 5.953900814056396 8.216728210449219 5.335117816925049 C 9.277071952819824 4.716334819793701 10.4350414276123 4.406942844390869 11.69063758850098 4.406942844390869 C 12.94623565673828 4.406942367553711 14.10420417785645 4.716334342956543 15.16454792022705 5.335117816925049 C 16.22488975524902 5.953901290893555 17.06445121765137 6.793464660644531 17.68323516845703 7.853806972503662 C 18.3020191192627 8.914148330688477 18.61141204833984 10.07211780548096 18.61141204833984 11.32771587371826 Z" fill="#707070" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
const String _svg_lcx3wv =
    '<svg viewBox="169.7 679.3 36.0 35.5" ><path transform="matrix(0.0, -1.0, 1.0, 0.0, 169.73, 715.0)" d="M 13.44449996948242 18 C 13.44449996948242 15.62400054931641 15.37049961090088 13.71750068664551 17.72699928283691 13.71750068664551 C 20.08499908447266 13.71750068664551 22.01099967956543 15.64350032806396 22.01099967956543 18 C 22.01099967956543 20.35799980163574 20.08499908447266 22.28400039672852 17.72699928283691 22.28400039672852 C 15.37199974060059 22.28400039672852 13.44449996948242 20.35799980163574 13.44449996948242 18 Z M 17.72699928283691 0 C 9.322500228881836 0 2.282999992370605 5.760000228881836 0.2849999964237213 13.53750038146973 C 0.2700000107288361 13.5915002822876 0.2700000107288361 13.64249992370605 0.2700000107288361 13.71750068664551 C 0.2700000107288361 14.1870002746582 0.6480000019073486 14.58150100708008 1.132500052452087 14.58150100708008 L 8.385000228881836 14.58150100708008 C 8.730000495910645 14.58150100708008 9.034500122070312 14.38650131225586 9.160500526428223 14.08200073242188 C 10.6560001373291 10.84200096130371 13.93050003051758 8.574001312255859 17.72850036621094 8.574001312255859 C 22.92749977111816 8.574001312255859 27.15750122070312 12.80400085449219 27.15750122070312 18.00450134277344 C 27.15750122070312 23.20950126647949 22.9275016784668 27.43950271606445 17.72249984741211 27.43950271606445 C 13.92749977111816 27.43950271606445 10.65149974822998 25.18950271606445 9.157500267028809 21.93000221252441 C 9.01200008392334 21.6450023651123 8.722499847412109 21.42600250244141 8.381999969482422 21.42600250244141 L 1.132500052452087 21.42600250244141 C 0.6645000576972961 21.42600250244141 0.2700000405311584 21.80550193786621 0.2700000405311584 22.29000282287598 C 0.2700000405311584 22.34550285339355 0.2910000383853912 22.39800262451172 0.2910000383853912 22.47000312805176 C 2.270999908447266 30.23999977111816 9.321000099182129 36 17.72699928283691 36 C 27.66299819946289 36 35.72699737548828 27.9375 35.72699737548828 18 C 35.72699737548828 8.065500259399414 27.66299819946289 0 17.72699737548828 0 Z" fill="#004869" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
